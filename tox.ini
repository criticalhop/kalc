[tox]
envlist = py37
isolated_build = True

[testenv]
whitelist_externals = bash
passenv = 
    POODLE_LOCAL_PLANNER
    POODLE_SOLVER_URL
    POODLE_ASTAR_WEIGHT
    POODLE_LIN_COUNT
    POODLE_LOG_COUNT
    PYTHON

deps = 
    pytest
    pytest-cov
    pytest-pylint
    pytest-cache
    ; mem_top
commands =
    ; python -m pytest -s --disable-pytest-warnings --pylint --pylint-jobs=4 --pylint-error-types=WEF 
    bash -c "fuser -k -n tcp $(echo -n $POODLE_SOLVER_URL|cut -d: -f3) || echo CLEAN"
    bash -c "cd ../downward && timeout 9000 poodleserver 2>&1 >/dev/null &"
    python -m pytest -s --durations=100 -vv --disable-pytest-warnings --pylint --pylint-jobs=4 --pylint-error-types=EF {posargs} 
    bash -c "fuser -k -n tcp $(echo -n $POODLE_SOLVER_URL|cut -d: -f3) || echo CLEAN"

[testenv:innertest]
whitelist_externals = bash
passenv =
    POODLE_LIN_COUNT
    POODLE_LOG_COUNT
    PYTHON

deps =
    pytest
    pytest-cov
    pytest-pylint
    pytest-cache
    ; mem_top
commands =
    python -m pytest -m "not debug and not slow and not nofast" --durations=100 -vv --disable-pytest-warnings --pylint --pylint-jobs=4 --pylint-error-types=EF {posargs}

[testenv:ipython]
whitelist_externals = bash
passenv = 
    POODLE_LOCAL_PLANNER
    POODLE_SOLVER_URL
    POODLE_ASTAR_WEIGHT
    POODLE_LIN_COUNT
    POODLE_LOG_COUNT
    POODLE_STORE_SAS
    PYTHON
    DOWNWARD_FOLDER
    HOME

deps = 
    pytest
    pytest-cov
    pytest-pylint
    pytest-cache
    gitpython
    ipython
    pandas
    downward-ch
    ; mem_top
commands =
    pip uninstall -y poodle
    bash -c "cd ../poodle && pip install ."
    bash -c "fuser -k -n tcp $(echo -n $POODLE_SOLVER_URL|cut -d: -f3) || echo CLEAN"
    bash -c "cd ../downward && timeout 40000 poodleserver 2>&1 >/dev/null &"
    ; python -m pytest -vv --durations=100 --disable-pytest-warnings --pylint --pylint-jobs=4 --pylint-error-types=EF {posargs} 
    ipython -i -c "from kalc.interactive import *"
    bash -c "fuser -k -n tcp $(echo -n $POODLE_SOLVER_URL|cut -d: -f3) || echo CLEAN"


[testenv:poodledev]
whitelist_externals = bash
passenv = 
    POODLE_LOCAL_PLANNER
    POODLE_SOLVER_URL
    POODLE_ASTAR_WEIGHT
    POODLE_LIN_COUNT
    POODLE_LOG_COUNT
    POODLE_STORE_SAS
    PYTHON
    DOWNWARD_FOLDER
    POODLE_PERSIST
    POODLE_STORE_STDOUT
    HOME
    POODLE_TEMPDIR

deps = 
    pytest
    pytest-cov
    pytest-pylint
    pytest-cache
    gitpython
    jsonpatch
    downward-ch
    ; mem_top
commands =
    pip uninstall -y poodle
    bash -c "cd ../poodle && pip install ."
    bash -c "chmod +x ./.tox//poodledev/lib/python*/site-packages/downward_ch*/downward_ch/builds/release/bin/downward || echo CLEAN"
    bash -c "chmod +x .tox/poodledev/lib/python3.7/site-packages/downward_ch/builds/release/bin/downward || echo CLEAN"
    bash -c "fuser -k -n tcp $(echo -n $POODLE_SOLVER_URL|cut -d: -f3) || echo CLEAN"
    bash -c "cd ../downward && timeout 40000 poodleserver 2>&1 >/dev/null &"
    python -m pytest -vv --durations=100 --disable-pytest-warnings --pylint --pylint-jobs=4 --pylint-error-types=EF {posargs} 
    bash -c "fuser -k -n tcp $(echo -n $POODLE_SOLVER_URL|cut -d: -f3) || echo CLEAN"

[testenv:lab]
whitelist_externals = bash
passenv = 
    POODLE_LOCAL_PLANNER
    POODLE_SOLVER_URL
    POODLE_ASTAR_WEIGHT
    POODLE_LIN_COUNT
    POODLE_LOG_COUNT
    POODLE_STORE_SAS
    PYTHON
    DOWNWARD_FOLDER
    HOME
    POODLE_PERSIST
    POODLE_STORE_STDOUT
    POODLE_TEMPDIR

deps = 
    pytest
    pytest-cov
    pytest-pylint
    pytest-cache
    gitpython
    jsonpatch
    jupyterlab
    downward-ch
    ; mem_top
commands =
    pip uninstall -y poodle
    bash -c "cd ../poodle && pip install ."
    bash -c "chmod +x ./.tox//lab/lib/python*/site-packages/downward_ch*/downward_ch/builds/release/bin/downward || echo CLEAN"
    bash -c "chmod +x .tox/lab/lib/python3.7/site-packages/downward_ch/builds/release/bin/downward || echo CLEAN"
    bash -c "fuser -k -n tcp $(echo -n $POODLE_SOLVER_URL|cut -d: -f3) || echo CLEAN"
    bash -c "cd ../downward && timeout 40000 poodleserver 2>&1 >/dev/null &"
    jupyter lab
    bash -c "fuser -k -n tcp $(echo -n $POODLE_SOLVER_URL|cut -d: -f3) || echo CLEAN"

[testenv:cov]
commands = py.test --cov kalc {posargs}
deps=
    pytest
    pytest-cov

[testenv:pyinstaller]
extras =
deps =
    click
    poodle
    pyyaml
    yaspin
    logzero
    certifi
    requests
    packaging
    pyinstaller
    pyupdater
    staticx
# Setting PYTHONHASHSEED to a known value assists with reproducible builds.
# See https://pyinstaller.readthedocs.io/en/stable/advanced-topics.html#creating-a-reproducible-build
setenv=PYTHONHASHSEED=1
commands=
    pyinstaller --onefile guardctl/cli.py -n kubectl-val.exe --hidden-import pyupdater.client --hidden-import pyupdater --hidden-import guardctl.model.kinds --add-data "guardctl/model/kinds:guardctl/model/kinds" --add-data ".tox/.package/lib/python3.7/site-packages/yaspin/data:yaspin/data"
    staticx -l /lib/x86_64-linux-gnu/libnss_dns.so.2 -l /lib/x86_64-linux-gnu/libresolv.so.2 dist/kubectl-val.exe dist/kubectl-val

[testenv:pyinstaller-dev]
extras =
deps =
    click
    pyyaml
    yaspin
    logzero
    certifi
    requests
    packaging
    pyinstaller
    pyupdater
    staticx
    dephell
# Setting PYTHONHASHSEED to a known value assists with reproducible builds.
# See https://pyinstaller.readthedocs.io/en/stable/advanced-topics.html#creating-a-reproducible-build
setenv=PYTHONHASHSEED=1
commands=
    bash -c "cd ../poodle && dephell project build --from pyproject.toml" 
    pip uninstall -y poodle
    bash -c "cd ../poodle && python ./setup.py install"
    python -c "import poodle"
    pyinstaller --onefile guardctl/cli.py -n kubectl-val.exe --hidden-import pyupdater.client --hidden-import pyupdater --hidden-import guardctl.model.kinds --hidden-import poodle --add-data "guardctl/model/kinds:guardctl/model/kinds" --add-data ".tox/.package/lib/python3.7/site-packages/yaspin/data:yaspin/data"
    staticx -l /lib/x86_64-linux-gnu/libnss_dns.so.2 -l /lib/x86_64-linux-gnu/libresolv.so.2 dist/kubectl-val.exe dist/kubectl-val

[testenv:pyupdater]
extras =
deps =
    click
    poodle
    pyyaml
    yaspin
    logzero
    certifi
    requests
    packaging
    pyinstaller
    pyupdater[scp]
    staticx
# Setting PYTHONHASHSEED to a known value assists with reproducible builds.
# See https://pyinstaller.readthedocs.io/en/stable/advanced-topics.html#creating-a-reproducible-build
setenv=PYTHONHASHSEED=1
commands=
    bash -c "touch pyu.log"
    bash -c "rm -rf pyu-data/new || echo CLEAN"
    bash -c "rm -rf pyu-data/kubectl-val || echo CLEAN"
    bash -c "rm -rf pyu-data/kubectl-val.exe || echo CLEAN"
    pyupdater keys -i
    pyupdater build --app-version=0.1.4 --onefile kalc/cli.py -n kubectl-val.exe \
        --hidden-import kalc.model.kinds \
        --add-data "../../kalc/model/kinds:kalc/model/kinds" \
        --add-data "../../.tox/.package/lib/python3.7/site-packages/yaspin/data:yaspin/data"
    bash -c "cd pyu-data/new && find . -type f | xargs tar xvf && mv ./kubectl-val ../kubectl-val.exe"
    staticx -l /lib/x86_64-linux-gnu/libnss_dns.so.2 -l /lib/x86_64-linux-gnu/libresolv.so.2 pyu-data/kubectl-val.exe pyu-data/kubectl-val 
    bash -c "cd pyu-data/new && P_FN=`find . -type f`; tar zcvf $P_FN ../kubectl-val"
    pyupdater pkg --process
    pyupdater pkg --sign 
